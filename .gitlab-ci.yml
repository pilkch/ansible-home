---
stages:
  - tests-and-checks
  - deploy

default:
  before_script:
    - dnf install -y ansible yamllint python3-ansible-lint ansible-collection-containers-podman

check-yaml:
  stage: tests-and-checks
  tags:
    - linux
  script:
    - yamllint -c .yamllint .

check-ansible:
  stage: tests-and-checks
  tags:
    - linux
  script:
    - ANSIBLE_CONFIG=ansible.cfg ansible-lint

# Gitlab's monthly scheduled pipeline (See https://gitlab.network.home:2443/dev/public/ansible-home/-/pipeline_schedules)
update-certificates-deploy:
  stage: deploy
  tags:
    - linux
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"' # Only run this stage when we are run from the gitlab scheduled pipeline
  before_script:
    - dnf install -y python3 python3-pip augeas-libs certbot yq patch ansible
    - pip3 install certbot-dns-cloudflare cloudflare
  script:
    - rm -rf ansible-secrets
    # Set git config
    - git config --global user.email "gitlab-ci@gitlab.network.home"
    - git config --global user.name "gitlab-ci"
    - git config --global http.sslCAInfo "$GITLAB_PUBLIC_CERT"
    # Clone the ansible-secrets repo and create or use a branch
    # NOTE: We would use CI_JOB_TOKEN but it from ansible-home it doesn't have push access to ansible-secrets, so we use an access token, ANSIBLE_SECRETS_PUSH_ACCESS_TOKEN
    - git clone https://gitlab-ci-token:${ANSIBLE_SECRETS_PUSH_ACCESS_TOKEN}@gitlab.network.home:2443/dev/ansible-secrets.git
    - cd ansible-secrets
    - git checkout update-home-assistant-certificates || git checkout -b update-home-assistant-certificates
    - git branch
    - cd -
    # Copy the ansible vault file across
    - cp ./ansible-secrets/vault.yml ./inventories/group_vars/all/vault.yml
    # Create the lets_encrypt .ini file
    - echo "dns_cloudflare_api_token = $DNS_CLOUDFLARE_API_TOKEN" > ./scripts/lets_encrypt/certbot-iluo.xyz.ini
    # Generate the certifcates with Let's Encrypt and add it to the ansible vault file
    - ./scripts/generate_lets_encrypt_certificates.sh "$VAULT_PASSWORD_TXT" homeassistant.iluo.xyz home_assistant_ca_bundle_certificate home_assistant_private_key
    # Copy the ansible vault file back again
    - cp ./inventories/group_vars/all/vault.yml ./ansible-secrets/vault.yml
    # Commit and push these changes to git
    - cd ansible-secrets
    - git add ./vault.yml
    - git commit -m "Updated Home Assistant certificates" || true # This is allowed to fail, there might not be any changes
    - git push origin update-home-assistant-certificates
    - cd -
    # Add the Home Assistnat SSH private key
    - cp "$HOME_ASSISTANT_SSH_PRIVATE_KEY" $HOME/.ssh/
    # Call ansible to copy across the certificates and restart Home Assistant
    - ANSIBLE_CONFIG=./ansible.cfg ansible-playbook -i inventories/network_home.ini -l homeassistant.iluo.xyz --become-password-file "$HOME_ASSISTANT_PASSWORD_FILE" --vault-password-file "$VAULT_PASSWORD_TXT" ./playbooks/podman/homeassistant.yml # VAULT_PASSWORD_TXT is from the gitlab scheduled pipeline settings
  after_script:
    # Clean up
    - rm -rf ansible-secrets ./inventories/group_vars/all/vault.yml ./scripts/lets_encrypt/certbot-iluo.xyz.ini
